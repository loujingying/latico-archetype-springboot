# springboot配置，测试环境配置
###########################################################
###########################################################
server:
  port: ${appPort}
  servlet:
    context-path: ${appContextPath}
###########################################################
###########################################################
spring:
  application:
    name: ${appName}
  main:
    allow-bean-definition-overriding: true
  ###########################################################
  ###########################################################
  #安全认证配置
  security:
    user:
      name: admin
      password: admin
  ###########################################################
  ###########################################################
  # Specify the DBMS
  jpa:
    #    database: mysql
    # Show or not log for each sql query
    show-sql: true
    # Hibernate ddl auto (create, create-drop, update)
    generate-ddl: true
    open-in-view: false
    hibernate:
      ddl-auto: update
      # Naming strategy 定义HibernateO/R映射字段的命名策略
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    # stripped before adding them to the entity manager
    properties:
      hibernate:
        format_sql: true
  #        #        Hibernate的数据库方言。另外还有一些其他jpa配置信息，篇幅有限，可查阅jpa（hibernate）架构基本配置相关。
  #        dialect: org.hibernate.dialect.MySQL5Dialect
  ###########################################################
  ###########################################################
  #配置数据源
  datasource:
    #    默认数据源，主数据源
    primary:
      name: primary
      driver-class-name: ${jdbcDriverClassName}
      url: ${jdbcUrl}
      username: ${jdbcUsername}
      password: ${jdbcPassword}

      #      mysql的查询校验
      #      validation-query: SELECT 'x'
      #      oracle的查询校验
      #      validation-query: SELECT 'x'  FROM DUAL

      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000

      #druid相关配置
      #保持连接
      keep-alive: true
      #监控统计拦截的filters
      filters: stat
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      #      type，目前没发现能起什么作用
      type: com.alibaba.druid.pool.DruidDataSource
    ###########################################################
    ###########################################################
    #      第二个数据源，可以跟第一个数据源一样，这里因为大多数项目都是默认一样
    secondary:
      name: secondary
      driver-class-name: ${jdbcDriverClassName}
      url: ${jdbcUrl}
      username: ${jdbcUsername}
      password: ${jdbcPassword}
      #      mysql的查询校验
      #      validation-query: SELECT 'x'
      #      oracle的查询校验
      #      validation-query: SELECT 'x'  FROM DUAL

      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      #druid相关配置
      #保持连接
      keep-alive: true
      #监控统计拦截的filters
      filters: stat
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      #      type，目前没发现能起什么作用
      type: com.alibaba.druid.pool.DruidDataSource
###########################################################
###########################################################
##  指定mybatis映射文件的地址，多数据源已经在java代码处理
mybatis:
  configuration:
    map-underscore-to-camel-case: false
##  mapper-locations: classpath:mybatis/mapper/**/*.xml
##  type-aliases-package: com.latico.archetype.springboot.dao.secondary
###########################################################
###########################################################
logging:
  #  引入日志配置文件,logback的jar跟log4j2的jar不能共存，日志配置根据实际情况配置

  #  如果是使用jar方式启动
  #  config: classpath:config/logback-spring.xml
  config: file:./config/logback-spring.xml
  #  如果是使用外部web容器方式启动，使用该日志,但是不生效，只会读取类路径根目录下规范配置
  #  config: classpath:log4j2.xml

  #  配置包的日志打印等级
#  level:
#    com.latico.archetype.springboot.dao.secondary.mapper: DEBUG
###########################################################
###########################################################
#  是否启动swagger
swagger:
  show: true
###########################################################
###########################################################
#http编码配置
http:
  encoding:
    charset: UTF-8
    force: true
    enabled: true
###########################################################
###########################################################
#  helper-dialect：指定数据库，不指定的话会默认自动检测数据库类型
#  reasonable：是否启用分页合理化。如果启用，当pagenum<1时，会自动查询第一页的数据，当pagenum>pages时，自动查询最后一页数据；不启用的，以上两种情况都会返回空数据
#  support-methods-arguments：默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。（copy来的，因为我也不知道怎么去解释）
#  params：用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
pagehelper:
  #  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params:
  ###########################################################
  ###########################################################
#   连接springcloud注册中心相关配置
eureka:
  instance:
    preferIpAddress: true
    # 每隔10s发送一次心跳
    lease-renewal-interval-in-seconds: 10
    # 告知服务端30秒还未收到心跳的话，就将该服务移除列表
    lease-expiration-duration-in-seconds: 30
    #    eureka的管理页面中的注册客户端列表的status字段显示的内容，设置显示swagger
    statusPageUrl: http://${spring.security.user.name}:${spring.security.user.password}@${spring.cloud.client.ip-address:localhost}:${server.port}/swagger-ui.html
  client:
    serviceUrl:
      #      可以多个，用逗号分割，逗号跟实际内容之间不能有空格
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8000/eureka/
  ###########################################################
  ###########################################################